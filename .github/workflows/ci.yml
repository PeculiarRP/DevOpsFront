name: Docker Image CI

on:
  push:
    branches: [ "Lab-4" ]
  pull_request:
    branches: [ "Lab-4" ]

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Test the Docker image
      run: docker compose -f docker-compose.yml up -d --wait

    - name: Setup Python 3.12.1
      uses: actions/setup-python@v4
      with:
        python-version: 3.12.1

    - name: Install python
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install pytest-selenium
        pip install psycopg2
        pip install flask
        pip install flask_cors
        pip install prometheus-flask-exporter

    - name: Tested backend
      run: |
        pytest ./backend/back_test.py::test_isCreated_DB_table_exists
        pytest ./backend/back_test.py::test_isCreated_DB_table_not_exists
        pytest ./backend/back_test.py::test_AllEntries
        pytest ./backend/back_test.py::test_Insert_DB
        pytest ./backend/back_test.py::test_Update_DB
        pytest ./backend/back_test.py::test_Delete_DB
        pytest ./backend/back_test.py::test_jsoncreat
        pytest ./backend/back_test.py::test_get_endpoint
        pytest ./backend/back_test.py::test_post_endpoint
        pytest ./backend/back_test.py::test_put_endpoint
        pytest ./backend/back_test.py::test_delete_endpoint

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.14'
        registry-url: 'https://registry.npmjs.org'  

    - name: NMP update
      run: |
        cd frontend
        npm update

    - name: Tested frontend
      run: |
        cd frontend
        npm run build --if-present       
        npm run test

  scane:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        id: sonarqube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
      - name: Check Quality Gate status
        run: |
          if [ "${{ steps.sonarqube.outputs.qualitygate-status }}" != "OK" ]; then
            echo "Quality Gate failed! Status: ${{ steps.sonarqube.outputs.qualitygate-status }}"
            exit 1
          fi


  build:
    needs: test, scane
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker compose -f docker-compose.yml up -d --wait

    - name: Login Docker
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Export Backend
      run: |
        docker tag edenchik/devopslab:backend.2.0.0 edenchik/devopslab:backend.2.0.0
        docker push edenchik/devopslab:backend.2.0.0  

    - name: Export Frontend
      run: |
        docker tag edenchik/devopslab:frontend.2.0.0 edenchik/devopslab:frontend.2.0.0
        docker push edenchik/devopslab:frontend.2.0.0
    